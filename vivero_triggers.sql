-- MySQL Script generated by MySQL Workbench
-- sáb 21 nov 2020 12:53:12 WET
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema mydb_vivero
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema mydb_vivero
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `mydb_vivero` DEFAULT CHARACTER SET utf8 ;
USE `mydb_vivero` ;

-- -----------------------------------------------------
-- Table `mydb_vivero`.`Vivero`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb_vivero`.`Vivero` (
  `ubicacion` VARCHAR(45) NOT NULL,
  `nombre` VARCHAR(45) NOT NULL,
  `horario_apertura` DATE NULL,
  `horario_cierre` DATE NULL,
  PRIMARY KEY (`ubicacion`))
ENGINE = InnoDB;

-- -----------------------------------------------------
-- Table `mydb_vivero`.`Zona`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb_vivero`.`Zona` (
  `Nombre` VARCHAR(45) NOT NULL,
  `num_zona` INT NULL,
  `Vivero_ubicacion` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`Nombre`),
  -- INDEX `fk_Zona_Vivero1_idx` (`Vivero_ubicación` ASC) VISIBLE,
  CONSTRAINT `fk_Zona_Vivero1`
    FOREIGN KEY (`Vivero_ubicacion`)
    REFERENCES `mydb_vivero`.`Vivero` (`ubicacion`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

-- -----------------------------------------------------
-- Table `mydb_vivero`.`Producto`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb_vivero`.`Producto` (
  `codigo_barras` INT NOT NULL,
  `caducidad` VARCHAR(20) NULL,
  `nombre` VARCHAR(45) NULL,
  `precio` FLOAT NULL,
  `tipo` VARCHAR(45) NULL,
  `stock` INT NOT NULL,
  `nombre_zona` VARCHAR(45) NULL,
  `num_zona` INT NULL,
  `Zona_Nombre` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`codigo_barras`),
  -- UNIQUE INDEX `Zona_nombre_UNIQUE` () VISIBLE,
  -- INDEX `fk_Producto_Zona1_idx` (`Zona_Nombre` ASC) VISIBLE,
  CONSTRAINT `fk_Producto_Zona1`
    FOREIGN KEY (`Zona_Nombre`)
    REFERENCES `mydb_vivero`.`Zona` (`Nombre`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

-- -----------------------------------------------------
-- Table `mydb_vivero`.`Empleado`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb_vivero`.`Empleado` (
  `DNI` VARCHAR(20) NOT NULL,
  `nombre` VARCHAR(45) NULL,
  `apellidos` VARCHAR(45) NULL,
  `contrato` VARCHAR(45) NULL,
  `codigo_SS` INT NULL,
  `Zona_Nombre` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`DNI`),
  -- INDEX `fk_Empleado_Zona1_idx` (`Zona_Nombre` ASC) VISIBLE,
  CONSTRAINT `fk_Empleado_Zona1`
    FOREIGN KEY (`Zona_Nombre`)
    REFERENCES `mydb_vivero`.`Zona` (`Nombre`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

-- -----------------------------------------------------
-- Table `mydb_vivero`.`cliente`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb_vivero`.`cliente` (
  `DNI` INT NOT NULL,
  `nombre` VARCHAR(45) NOT NULL,
  `codigo_fidelizacion` INT NULL,
  `num_tarjeta` INT NULL,
  `bonificacion` FLOAT NULL,
  `Gasto_mensual` FLOAT NULL,
  `email` VARCHAR(65) NULL,
  PRIMARY KEY (`DNI`))
ENGINE = InnoDB;
-- -----------------------------------------------------
-- Table `mydb_vivero`.`Pedido`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb_vivero`.`Pedido` (
  `num_pedido` INT NOT NULL,
  `fecha` DATE NULL,
  `Producto_codigo_barras` INT NOT NULL,
  `Empleado_DNI` VARCHAR(20) NOT NULL,
  `Cliente_DNI` INT NOT NULL,
  `Importe` FLOAT NULL,
  `cantidad` INT NOT NULL,
  PRIMARY KEY (`num_pedido`),
  -- INDEX `fk_Pedido_Producto1_idx` (`Producto_código_barras` ASC) VISIBLE,
  -- INDEX `fk_Pedido_Empleado1_idx` (`Empleado_DNI` ASC) VISIBLE,
  -- INDEX `fk_Pedido_Cliente1_idx` (`Cliente_DNI` ASC) VISIBLE,
  CONSTRAINT `fk_Pedido_Producto1`
    FOREIGN KEY (`Producto_codigo_barras`)
    REFERENCES `mydb_vivero`.`Producto` (`codigo_barras`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Pedido_Empleado1`
    FOREIGN KEY (`Empleado_DNI`)
    REFERENCES `mydb_vivero`.`Empleado` (`DNI`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Pedido_Cliente1`
    FOREIGN KEY (`Cliente_DNI`)
    REFERENCES `mydb_vivero`.`cliente` (`DNI`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

USE `mydb_vivero`;

-- ---------------
-- EJERCICIO 1:
-- ---------------

DELIMITER $$
USE `mydb_vivero`$$
CREATE PROCEDURE `crear_email` (IN dominio varchar(25), IN nombre varchar(45), OUT email varchar(60))
BEGIN 
  set email :=concat(nombre, '@', dominio);
END$$

DELIMITER ;
USE `mydb_vivero`$$

DELIMITER $$
USE `mydb_vivero`$$
CREATE DEFINER = CURRENT_USER TRIGGER `mydb_vivero`.`cliente_BEFORE_INSERT` BEFORE INSERT ON `cliente` FOR EACH ROW
BEGIN
	IF NEW.email is NULL THEN
		call crear_email('ull.edu.es', NEW.nombre, @email_temp);
    SET NEW.email = @email_temp;
		END IF;
END$$

DELIMITER ;

-- ---------------
-- EJERCICIO 3:
-- ---------------
DELIMITER $$
USE `mydb_vivero`$$
CREATE DEFINER = CURRENT_USER TRIGGER `mydb_vivero`.`stock_AFTER_INSERT` AFTER INSERT ON `Pedido` FOR EACH ROW
BEGIN
  SELECT stock INTO @stock FROM Producto WHERE NEW.Producto_codigo_barras = codigo_barras;
  SELECT cantidad INTO @cantidad FROM Pedido WHERE NEW.Producto_codigo_barras = Producto_codigo_barras;
  UPDATE Producto SET stock = @stock - @cantidad WHERE NEW.Producto_codigo_barras = codigo_barras;
END$$

DELIMITER ;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;